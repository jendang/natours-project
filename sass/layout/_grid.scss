@import "../abstracts/variables";
@import "../abstracts/mixins";

.row {

    max-width: $grid-width;
    background-color: #eee;

    // center a block element inside a block element
    // in this case, the row(block) will be centered in the browser
    margin: 0 auto;

    //.row:not(): not select last child
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    //clear the float between elements *** 
    //in this case the float between rows
    // this clearfix is written in mixins
    @include clearfix;

    //declare the attribute for class so we do not need repeat many same steps
    // all class START/BEGINNING with "col-"
    //*** $=: END ,  *=: INCLUDE/CONTAIN
    [class^="col-"]{
        //all cols has same background color and float and gutter 

        background-color: orange;
        float: left;
    
        &:not(:last-child){
            margin-right: $gutter-horizontal;
    
        }

    }

    //style the cols
    .col-1-of-2 {
        //calc() function to calculate the width of one col-1-of-2
        // using SASS var in calc function #{varName}
        width: calc((100% - #{$gutter-horizontal}) / 2 );

    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
        
    }

    .col-2-of-3 {
        width: calc(((100% - 2 * #{$gutter-horizontal}) / 3) * 2 + #{$gutter-horizontal});
        
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
        
    }
    
    .col-2-of-4 {
        width: calc((2 * (100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
        
    }
    
    .col-3-of-4 {
        width: calc((3 *(100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
        
    }
    



}